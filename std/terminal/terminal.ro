use pkg::io::[
    Readable
    Writable
]

pub type Stdout is
    impl Writable
end

pub type Stderr is
    impl Writable
end

pub type Stdin is
    impl Readable
end

pub func out(msg: str) -< Write(Stdout) do
    _ := perform Stdout.write_str(msg)
    _ := perform Stdout.flush()
end

pub func outln(msg: str) -< Write(Stdout) do
    _ := perform Stdout.write_str("\{msg}\n")
    _ := perform Stdout.flush()
end

pub func err(msg: str) -< Write(Stderr) do
    _ := perform Stderr.write_str(msg)
    _ := perform Stderr.flush()
end

pub func errln(msg: str) -< Write(Stderr) do
    _ := perform Stderr.write_str("\{msg}\n")
    _ := perform Stderr.flush()
end

pub func in() -> Result(str) -< Read(Stdin) do
    perform Stdin.read_chars(1)
end

pub func inln() -> Result(str) -< Read(Stdin) do
    perform Stdin.read_chars_until('\n')
end

pub func prompt(msg: str) -> Result(str) -< Read(Stdin), Write(Stdout) do
    _ := perform Stdout.write_str(msg)
    _ := perform Stdout.flush()

    perform Stdin.read_chars(1)
end

pub func promptln(msg: str) -> Result(str) -< Read(Stdin), Write(Stdout) do
    _ := perform Stdout.write_str(msg)
    _ := perform Stdout.flush()

    perform Stdin.read_chars_until('\n')
end