pub trait Iterable is
    type Item

    func next(mut self) -> Option(Self::Item) -< `E

    func all(`F, mut self, f: F) -> bool -< `E where
        F: Func(Self::Item) -> bool
    do
        mut val := true

        for item in self do
            if !f(item) then
                val = false
                break
            end
        end

        val
    end

    func any(`F, mut self, f: F) -> bool -< `E where
        F: Func(Self::Item) -> bool
    do
        mut val := false

        for item in self do
            if f(item) then
                val = true
                break
            end
        end

        val
    end

    func chain(`U, self, other: `U) -> Chain(Self, (U as IntoIterable)::IntoIter) where
        U: IntoIterable(Item = Self::Item)
    do
        Chain(
            first: self
            second: other
        )
    end
end