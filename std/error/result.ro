use super::Exn

##
pub type Result(`T, `E) is
    ##
    | ok(T)
    ##
    | err(E)

    ##
    pub func wrap(F, f: F) -> Result(T, E) where
        F: Func() -> T -< Exn(E), `E
    do
        when raise(err: E) do
            return Result.err(err)
        end

        Ok(f())
    end

    pub func unwrap(take self) -> T -< Exn(E) where
        E: Error
    do
        if self matches
            Result.ok(t) then t
            Result.err(e) then perform raise(e)
        end
    end

    
end