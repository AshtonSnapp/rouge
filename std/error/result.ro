
pub type Result<T, E: Error> is
	| Err(E)
	| Ok(T)

	pub func wrap(f: F) -> Result<T, E> where
		F: Func() -> T -< Exception<E>
	do
		with
			Ok(f())
		when Exception::throw(e) do
			Err(e)
		end
	end

	pub func unwrap(self) -> T -< Exception<E> do
		if self matches
			Ok(t) then t
			Err(e) then Exception::throw(e)
		end
	end

	pub func unwrap_or(self, alt: T) -> T do
		if self matches
			Ok(t) then t
			Err(_) then alt
		end
	end

	pub func unwrap_or_else(self, alt: F) -> T where
		F: Func(E) -> T
	do
		if self matches
			Ok(t) then t
			Err(e) then alt(e)
		end
	end

	pub func unwrap_or_default(self) -> T where
		T: Default
	do
		if self matches
			Ok(t) then t
			Err(_) then T::default()
		end
	end
end