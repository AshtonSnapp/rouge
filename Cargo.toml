[package]
name = "rouge"
version = "0.1.0"
authors = ["Ashton Scott Snapp <ashton@ashtonsnapp.com>"]
edition = "2021"
description = "A statically-typed programming language for applications, plugins, and config files."
readme = "README.md"
license = "MIT"
categories = ["compilers", "command-line-utilities"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# Library needs to produce both a C-loadable dynamic library and a Rust library.
crate-type = ["cdylib", "rlib"]

[features]
default = ["interpreter"]
# Allows parsing and interpreting Rouge source code, instead of just dealing with bytecode.
interpreter = []
# Allows saving an interpreted Rouge program as a bytecode file.
compiler = ["interpreter"]
# Allows running Rouge code through a Read-Evaluate-Print-Loop (REPL), or interactive interpreter.
repl = ["interpreter"]

[dependencies]
# Lexer
logos = "0.12"
# Parser
nom = "7.1"
# Command line interface
clap = { version = "3.2", features = ["cargo", "wrap_help"] }
# Bytecode file compression and decompression.
zstd = "0.11"
# Used to dynamically load native libraries as hooks for Rouge programs.
dlopen = { version = "0.1", optional = true }